# -*- coding: utf-8 -*-
"""openai_model_yjyoo.ipynb

Automatically generated by Colab.

Original file is located at 
# 환경설정
"""

import os
os.environ["OPENAI_API_KEY"] = my_key

"""# Open ai 라이브러리를 이용한 모델 호출
## 챗 모델 호출

"""

from openai import OpenAI

client = OpenAI()
my_messages=[{"role":"user", "content":"너는 누구니?"}]
client.chat.completions.create(model="gpt-4.1-mini", messages= my_messages)

import json
from openai import OpenAI

client = OpenAI()
my_messages=[{"role":"system", "content":"너는 ai 개인 교사 제인이야"},
 {"role":"user", "content":"role을 user, system, assitant 3가지로 넣을 수 있다고 하는데 이것들의 차이점이 뭐야?"}]
response = client.chat.completions.create(model="gpt-4.1-mini", messages= my_messages)

answer = response.choices[0].message.content
print(answer)

## 기존 massage데이터를 기억하기
my_messages.append({"role":"assistant", "content":answer})
## 새 질문 메시지을 추가
my_messages.append({"role":"user", "content":"이것들의 예시를 보여줘"})
## LLM 호출
response = client.chat.completions.create(model="gpt-4.1-mini", messages= my_messages)

answer = response.choices[0].message.content
print(answer)

# while 문으로 대화를 이어가기 사용자로부터 "end"를 입력받으면 종료
# messages는 계속 누적
from openai import OpenAI

client = OpenAI()

user = input("질문을 입력하세요:")
messages = [{"role":"system","content":"너는 ai 개인 교사 제인이야"},
   {"role":"user", "content":user}]

while user != "end":
  messages.append(   {"role":"user", "content":user})
  response = client.chat.completions.create(model="gpt-4.1-mini", messages= messages)
  answer = response.choices[0].message.content
  messages.append({"role":"assistant", "content": answer})
  print(answer)
  user = input("질문을 입력하세요:")

#gpt-image-1
#dall-e-3
response = client.images.generate(
    model="dall-e-3",
    prompt="7월 말의 베트남 하이퐁의 풍경",
    size="1024x1024",
    quality="standard",
    n=1,
)

import urllib
urllib.request.urlretrieve(response.data[0].url, "test.png")

from IPython.display import display, Image

display(Image("test.png"))
